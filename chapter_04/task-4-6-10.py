"""
Асинхронное планирование проекта
"""
import asyncio

tasks_dependencies = {
    "Подготовка_окружения": {
        "этапы": [
            {"название": "Настройка виртуального окружения", "время": 1},
            {"название": "Установка базовых зависимостей", "время": 2},
            {"название": "Настройка системы контроля версий", "время": 3},
            {"название": "Проверка сетевых настроек", "время": 4},
            {"название": "Клонирование основной ветки", "время": 4},
            {"название": "Проверка последних изменений", "время": 6},
            {"название": "Проверка локальных зависимостей", "время": 8}
        ]
    },
    "Проверка_зависимостей": {
        "этапы": [
            {"название": "Обновление устаревших зависимостей", "время": 1},
            {"название": "Установка новых зависимостей", "время": 3},
            {"название": "Предварительная очистка", "время": 6},
            {"название": "Компиляция исходного кода ядра", "время": 4},
            {"название": "Логирование результатов компиляции", "время": 7}
        ]
    },
    "Компиляция_модулей": {
        "этапы": [
            {"название": "Компиляция модуля A", "время": 3},
            {"название": "Компиляция модуля B", "время": 4},
            {"название": "Тестирование модулей на совместимость", "время": 1},
            {"название": "Инициализация тестового окружения", "время": 3},
            {"название": "Тестирование модуля A", "время": 1}
        ]
    },
    "Сборка_БД": {
        "этапы": [
            {"название": "Создание структуры БД", "время": 2},
            {"название": "Наполнение начальными данными", "время": 6},
            {"название": "Импорт данных пользователей", "время": 2},
            {"название": "Импорт транзакционных данных", "время": 1},
            {"название": "Подготовка пакетов для релиза", "время": 4}
        ]
    },
    "Развертывание_релиза": {
        "этапы": [
            {"название": "Создание инструкций для установки", "время": 7},
            {"название": "Финальное тестирование релиза", "время": 1},
            {"название": "Развертывание сборки", "время": 4},
            {"название": "Проверка работоспособности сервисов", "время": 6},
            {"название": "Подготовка релизных заметок", "время": 6},
            {"название": "Финализация документации", "время": 4},
            {"название": "Размещение релиза на сервере обновлений", "время": 1},
            {"название": "Подготовка мероприятия", "время": 3},
            {"название": "Объявление об успешном релизе", "время": 4}
        ]
    }
}


# Словарь tasks_dependencies = {} вшит в задачу, вставлять его в решение не нужно.
async def execute_subtask(task_name: str, duration: int):
    await asyncio.sleep(duration)
    if duration
    print("Подзадача: {}")


async def execute_task(task_name: str, subtasks: dict):
    subtasks_list = subtasks["этапы"]
    subtasks = [execute_subtask(st["название"], st["время"] if st["время"] < 5 else 5) for st in subtasks_list]
    sub_results = await asyncio.gather(*subtasks)
    for sub_result in sub_results:
        print(sub_result)

    st_max = max(subtasks_list, key=lambda s: s["время"])["время"]
    return st_max <= 5

async def main():
    tasks = [execute_task(n, st) for n, st in tasks_dependencies.items()]
    results = await asyncio.gather(*tasks)
    for result in results:
        if result:
            print("Задача: Компиляция_модулей = все подзадачи выполнены.")
        else:
            print("Задача: Подготовка_окружения не выполнилась в срок, т.к. одна или несколько подзадач заняли слишком много времени.")


asyncio.run(main())
